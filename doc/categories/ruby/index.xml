<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on hiroyuki_tの日記</title>
    <link>http://d.tflare.com/categories/ruby/</link>
    <description>Recent content in Ruby on hiroyuki_tの日記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>Copyright (c) 2006 - 2016, hiroyuki_tの日記</copyright>
    <lastBuildDate>Tue, 03 Jan 2012 09:17:54 +0000</lastBuildDate>
    <atom:link href="http://d.tflare.com/categories/ruby/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>影舞 patch</title>
      <link>http://d.tflare.com/2012/01/03/181754/</link>
      <pubDate>Tue, 03 Jan 2012 09:17:54 +0000</pubDate>
      
      <guid>http://d.tflare.com/2012/01/03/181754/</guid>
      <description>&lt;div class=&#34;section&#34;&gt;
  &lt;p&gt;
    影舞を使い始めたが、日本語以外で使用する場合、
  &lt;/p&gt;
  
  &lt;p&gt;
    spam対策が行われていないため、spamに狙われる。
  &lt;/p&gt;
  
  &lt;p&gt;
    そのためのパッチと個人的な修正を施したパッチ
  &lt;/p&gt;
  
  &lt;p&gt;
    &amp;nbsp;
  &lt;/p&gt;
  
  &lt;p&gt;
    さくらのレンタルサーバ スタンダードで使用
  &lt;/p&gt;
  
  &lt;p&gt;
    &amp;nbsp;
  &lt;/p&gt;
  
  &lt;p&gt;
    パッチ作成
  &lt;/p&gt;
  
  &lt;p&gt;
    diff -ur kagemai-0.8.8-orig/ kagemai-0.8.8/ &gt; kagemai.patch
  &lt;/p&gt;
  
  &lt;p&gt;
    &amp;nbsp;
  &lt;/p&gt;
  
  &lt;p&gt;
    パッチ当て
  &lt;/p&gt;
  
  &lt;p&gt;
    patch -p1 -d &amp;#8216;/home/taki/kagemai-0.8.8-orig&amp;#8217; &lt; &amp;#8216;/home/taki/kagemai.patch&amp;#8217;
  &lt;/p&gt;
  
  &lt;pre class=&#34;syntax-highlight&#34;&gt;&lt;span class=&#34;synType&#34;&gt;diff -ur kagemai-0.8.8-orig//html/admin.cgi kagemai-0.8.8//html/admin.cgi&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;--- kagemai-0.8.8-orig//html/admin.cgi 2008-03-09 19:36:59.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;+++ kagemai-0.8.8//html/admin.cgi 2011-12-13 21:11:49.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synStatement&#34;&gt;@@ -1,4 +1,4 @@&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;-#!/usr/bin/env ruby&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+#! /usr/local/bin/ruby&lt;/span&gt;
=begin
admin.cgi -- KAGEMAI CGI Interface (administrator mode).
=end
&lt;span class=&#34;synType&#34;&gt;diff -ur kagemai-0.8.8-orig//html/guest.cgi kagemai-0.8.8//html/guest.cgi&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;--- kagemai-0.8.8-orig//html/guest.cgi 2008-03-09 19:36:59.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;+++ kagemai-0.8.8//html/guest.cgi 2011-12-13 23:25:58.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synStatement&#34;&gt;@@ -1,4 +1,4 @@&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;-#!/usr/bin/env ruby&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+#! /usr/local/bin/ruby&lt;/span&gt;
=begin
guest.cgi - KAGEMAI CGI main
Copyright(C) 2002-2008 FUKUOKA Tomoyuki, DAIFUKUYA.
&lt;span class=&#34;synType&#34;&gt;diff -ur kagemai-0.8.8-orig//html/user.cgi kagemai-0.8.8//html/user.cgi&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;--- kagemai-0.8.8-orig//html/user.cgi 2008-03-09 19:36:59.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;+++ kagemai-0.8.8//html/user.cgi 2011-12-13 21:11:57.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synStatement&#34;&gt;@@ -1,4 +1,4 @@&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;-#!/usr/bin/env ruby&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+#! /usr/local/bin/ruby&lt;/span&gt;
=begin
user.cgi -- KAGEMAI CGI Interface (user mode).
=end
&lt;span class=&#34;synType&#34;&gt;diff -ur kagemai-0.8.8-orig//install_ja.rb kagemai-0.8.8//install_ja.rb&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;--- kagemai-0.8.8-orig//install_ja.rb 2008-03-09 19:37:00.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;+++ kagemai-0.8.8//install_ja.rb 2011-12-13 23:03:16.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synStatement&#34;&gt;@@ -21,7 +21,7 @@&lt;/span&gt;
### ￥〓￥〓￥&amp;#185;￥〓〓&amp;#188;￥〓〓〓〓〓〓〓〓〓
# ±〓〓〓〓〓〓〓〓〓〓〓￥〓￥&amp;#173;￥〓￥〓￥〓￥〓
&lt;span class=&#34;synSpecial&#34;&gt;-$root_dir = &#39;/usr/local/kagemai&#39; &lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+$root_dir = &#39;/var/www/html/kagemai&#39; &lt;/span&gt;
# CGI 〓〓￥&amp;#185;￥〓￥〓￥〓￥&amp;#183;〓&amp;#188;￥〓
$html_dir = &#39;/var/www/html/kagemai&#39;
&lt;span class=&#34;synType&#34;&gt;diff -ur kagemai-0.8.8-orig//lib/kagemai/cgi/action/new_report.rb kagemai-0.8.8//lib/kagemai/cgi/action/new_report.rb&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;--- kagemai-0.8.8-orig//lib/kagemai/cgi/action/new_report.rb 2008-03-09 19:37:00.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;+++ kagemai-0.8.8//lib/kagemai/cgi/action/new_report.rb 2011-12-31 09:54:17.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synStatement&#34;&gt;@@ -84,7 +84,7 @@&lt;/span&gt;
store_attachments(@project, message, attachments)
begin
&lt;span class=&#34;synSpecial&#34;&gt;- report = @project.new_report(message)&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ report = @project.new_report(message, true, @cgi.get_param(&#34;hongera_rarara&#34;))&lt;/span&gt;
body   = eval_template(&#39;new_report.rhtml&#39;, {:report =&amp;gt; report, :message =&amp;gt; message})
title  = MessageBundle[:title_new_report_added]
rescue SpamError
&lt;span class=&#34;synType&#34;&gt;diff -ur kagemai-0.8.8-orig//lib/kagemai/kcgi.rb kagemai-0.8.8//lib/kagemai/kcgi.rb&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;--- kagemai-0.8.8-orig//lib/kagemai/kcgi.rb 2008-03-09 19:37:00.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;+++ kagemai-0.8.8//lib/kagemai/kcgi.rb 2011-12-13 21:58:59.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synStatement&#34;&gt;@@ -153,7 +153,7 @@&lt;/span&gt;
def self.do_get_param(key)
unless @params_r.has_key?(key) then
@params_r[key] = &#39;&#39;
&lt;span class=&#34;synSpecial&#34;&gt;- if @cgi.params[key].size &amp;gt; 0 then&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ if @cgi.params[key].size &amp;gt; 0 &amp;&amp; key != &#34;attachment&#34; then&lt;/span&gt;
@params_r[key] = @cgi.params[key].collect{|p| p.read}.join(&#34;,\n&#34;)
end
end
&lt;span class=&#34;synType&#34;&gt;diff -ur kagemai-0.8.8-orig//lib/kagemai/project.rb kagemai-0.8.8//lib/kagemai/project.rb&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;--- kagemai-0.8.8-orig//lib/kagemai/project.rb 2008-03-09 19:37:00.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;+++ kagemai-0.8.8//lib/kagemai/project.rb 2011-12-31 21:43:54.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synStatement&#34;&gt;@@ -244,7 +244,8 @@&lt;/span&gt;
@db_manager.count_reports(@report_type, attr_name)
end
&lt;span class=&#34;synSpecial&#34;&gt;- def new_report(message, mail = true)&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ def new_report(message, mail = true, spam_check = false)&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ raise SpamError if spam_check == &#34;buster&#34;&lt;/span&gt;
raise SpamError if message.is_spam?(spam_filter())
report = nil
&lt;span class=&#34;synStatement&#34;&gt;@@ -286,22 +287,16 @@&lt;/span&gt;
end
def spam_filter()
&lt;span class=&#34;synSpecial&#34;&gt;- return Proc.new{|strings| false} unless @use_filter&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- # TODO: * &amp;#179;°〓〓〓&amp;#171;〓〓￥〓￥￡￥〓￥〓〓〓〓〓〓〓&amp;#185;〓〓〓〓〓〓〓〓〓〓〓&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- # * ja/en 〓〓〓??〓±〓〓〓〓〓〓〓〓〓〓&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- return Proc.new{|strings| false} if @lang != &#39;ja&#39;&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ return Proc.new{|strings| false} unless @use_filter &lt;/span&gt;
Proc.new{|strings|
&lt;span class=&#34;synSpecial&#34;&gt;- use_japanese = false&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- strings.each do |string|&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- # 〓〓〓〓〓〓〓?機?〓〓〓〓〓〓〓〓〓〓&amp;#171;〓〓￥〓￥§￥〓￥〓&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- if string =~ /[\xA1-\xFE][\xA1-\xFE]/ then&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- use_japanese = true&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- break&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- end&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ spam = false&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ if strings[0].scan(&#34;ttp&#34;).length &amp;gt;= 2&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ spam = true&lt;/span&gt;
end
&lt;span class=&#34;synSpecial&#34;&gt;- use_japanese == false&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ spam == true&lt;/span&gt;
}
end
&lt;span class=&#34;synType&#34;&gt;diff -ur kagemai-0.8.8-orig//resource/en/template/_default/message_form.rhtml kagemai-0.8.8//resource/en/template/_default/message_form.rhtml&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;--- kagemai-0.8.8-orig//resource/en/template/_default/message_form.rhtml 2008-03-09 19:36:58.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;+++ kagemai-0.8.8//resource/en/template/_default/message_form.rhtml 2011-12-13 23:14:43.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synStatement&#34;&gt;@@ -60,9 +60,7 @@&lt;/span&gt;
&amp;lt;th&amp;gt;Options&amp;lt;/th&amp;gt;
&amp;lt;td&amp;gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;input type=&#34;checkbox&#34; name=&#34;email_notification&#34;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;%= email_notification ? &#39;checked=&#34;checked&#34;&#39; : &#39;&#39; %&amp;gt;&amp;gt; Send&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- e-mail when there are replies&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ &amp;lt;input type=&#34;hidden&#34; name=&#34;email_notification&#34;&amp;gt;&lt;/span&gt;
&amp;lt;% if project.report_type.use_cookie? %&amp;gt;
&amp;lt;br&amp;gt;
&amp;lt;input type=&#34;checkbox&#34; name=&#34;allow_cookie&#34;
&lt;span class=&#34;synType&#34;&gt;diff -ur kagemai-0.8.8-orig//resource/en/template/_default/new_form.rhtml kagemai-0.8.8//resource/en/template/_default/new_form.rhtml&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;--- kagemai-0.8.8-orig//resource/en/template/_default/new_form.rhtml 2008-03-09 19:36:58.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;+++ kagemai-0.8.8//resource/en/template/_default/new_form.rhtml 2011-12-31 19:44:50.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synStatement&#34;&gt;@@ -35,12 +35,16 @@&lt;/span&gt;
&amp;lt;% next if etype.report_attr &amp;&amp; !etype.allow_user &amp;&amp; Mode::USER.current? %&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;% sclass = errors.has_id?(etype.id) ? &#39;class=&#34;error&#34;&#39; : &#39;&#39; %&amp;gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;% html_input = error ? etype.html_input_with_error(cgi.get_param(etype.id)) : etype.html_input() %&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ &amp;lt;% html_input = error ? etype.html_input_with_error(cgi.get_param(etype.id)) : etype.html_input(cgi.get_param(etype.id)) %&amp;gt;&lt;/span&gt;
&amp;lt;th &amp;lt;%= sclass %&amp;gt;&amp;gt;&amp;lt;%= etype.name %&amp;gt;&amp;lt;%= etype.required? ? &#39;&amp;lt;small&amp;gt;*&amp;lt;/small&amp;gt;&#39; : &#39;&#39; %&amp;gt;&amp;lt;/th&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;%= html_input %&amp;gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ &amp;lt;% if etype.id == &#34;attachment&#34; then %&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ &amp;lt;span class=&#34;form-desc&#34;&amp;gt;&amp;lt;font color=&#34;red&#34; font-weight=&#34;700&#34;&amp;gt;&amp;lt;%= etype.html_description() %&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ &amp;lt;% else %&amp;gt;&lt;/span&gt;
&amp;lt;span class=&#34;form-desc&#34;&amp;gt;&amp;lt;%= etype.html_description() %&amp;gt;&amp;lt;/span&amp;gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ &amp;lt;% end %&amp;gt;&lt;/span&gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;span class=&#34;synStatement&#34;&gt;@@ -49,9 +53,8 @@&lt;/span&gt;
&amp;lt;th&amp;gt;Options&amp;lt;/th&amp;gt;
&amp;lt;td&amp;gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;input type=&#34;checkbox&#34; &amp;lt;%= email_notification ? &#39;checked=&#34;checked&#34;&#39; : &#39;&#39; %&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- name=&#34;email_notification&#34;&amp;gt; Send e-mail when there are&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- replies&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ &amp;lt;input type=&#34;hidden&#34; name=&#34;email_notification&#34;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;+ &amp;lt;input type=&#34;checkbox&#34; name=&#34;hongera_rarara&#34; value=&#34;buster&#34; &amp;lt;%= cgi.get_param(&#34;rarara&#34;) ? &#39;&#39; : &#39;checked=&#34;checked&#34;&#39; %&amp;gt;&amp;gt; &amp;lt;font color=&#34;red&#34; font-weight=&#34;700&#34;&amp;gt; Please remove a check in the case of contribution.&amp;lt;/font&amp;gt;&lt;/span&gt;
&amp;lt;% if project.report_type.use_cookie? %&amp;gt;
&amp;lt;br&amp;gt;
&amp;lt;input type=&#34;checkbox&#34; &amp;lt;%= allow_cookie ? &#39;checked=&#34;checked&#34;&#39; : &#39;&#39; %&amp;gt;
&lt;span class=&#34;synType&#34;&gt;diff -ur kagemai-0.8.8-orig//resource/en/template/_default/view_report.rhtml kagemai-0.8.8//resource/en/template/_default/view_report.rhtml&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;--- kagemai-0.8.8-orig//resource/en/template/_default/view_report.rhtml 2008-03-09 19:36:58.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synType&#34;&gt;+++ kagemai-0.8.8//resource/en/template/_default/view_report.rhtml 2011-12-13 23:29:18.000000000 +0900&lt;/span&gt;
&lt;span class=&#34;synStatement&#34;&gt;@@ -105,32 +105,5 @@&lt;/span&gt;
&amp;lt;% if Mode::ADMIN.current? then %&amp;gt;
&amp;lt;hr&amp;gt;
&lt;span class=&#34;synSpecial&#34;&gt;-&amp;lt;h2&amp;gt;Change notification recipients&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;-&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;-&amp;lt;p&amp;gt;Check the addresses that you wish to notify when this report is updated.&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;-&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;-&amp;lt;form action=&#34;&amp;lt;%= project.url %&amp;gt;&#34; &lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- method=&#34;post&#34; &lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- accept-charset=&#34;&amp;lt;%= project.charset %&amp;gt;&#34;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;-&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;p&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;% addresses = report.email_addresses(false) %&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;% addresses.each do |addr, notify| %&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;% checked = notify ? &#39;checked=&#34;checked&#34;&#39; : &#39;&#39; %&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;input type=&#34;checkbox&#34; name=&#34;&amp;lt;%= addr.escape_h %&amp;gt;&#34; &amp;lt;%= checked %&amp;gt;&amp;gt; &amp;lt;%= addr.escape_h %&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;-&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;p&amp;gt;&amp;lt;input type=&#34;submit&#34; value=&#34;Change settings&#34;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;-&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;div&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;input type=&#34;hidden&#34; name=&#34;action&#34; value=&#34;&amp;lt;%= SetEmailNotification.name %&amp;gt;&#34;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;input type=&#34;hidden&#34; name=&#34;project&#34; value=&#34;&amp;lt;%= project.id %&amp;gt;&#34;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;input type=&#34;hidden&#34; name=&#34;id&#34; value=&#34;&amp;lt;%= report.id %&amp;gt;&#34;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;% if @lang == &#39;ja&#39; %&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;input type=&#34;hidden&#34; name=&#34;jp_enc_test&#34; value=&#34;〓〓&#34;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;% end %&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;- &amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&#34;synSpecial&#34;&gt;-&amp;lt;/form&amp;gt;&lt;/span&gt;
&amp;lt;% end %&amp;gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>1日毎に自動更新するページを静的に見せかけ、60倍速く表示する方法</title>
      <link>http://d.tflare.com/2011/01/19/174514/</link>
      <pubDate>Wed, 19 Jan 2011 08:45:14 +0000</pubDate>
      
      <guid>http://d.tflare.com/2011/01/19/174514/</guid>
      <description>&lt;div class=&#34;section&#34;&gt;
  &lt;p&gt;
    動的にページを生成すると、ページの表示が遅い。
  &lt;/p&gt;
  
  &lt;p&gt;
    静的に作れば速いが、定期的なページの更新が煩雑になる。
  &lt;/p&gt;
  
  &lt;p&gt;
    このため、動的にページを生成し、静的に見せかけ、速く表示できる方法を考えたので個人的なメモとして残す。
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    今回の場合、ページの更新間隔を1日としているが変更は容易に可能
  &lt;/p&gt;
  
  &lt;p&gt;
    環境:さくらのスタンダード
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    .htaccessの設定とプログラミング言語（ここではruby）とcronの連携で実現する。
  &lt;/p&gt;
  
  &lt;h4&gt;
    手順
  &lt;/h4&gt;
  
  &lt;p&gt;
    1. mod_rewriteでURLを書き換える。
  &lt;/p&gt;
  
  &lt;p&gt;
    2. 上記の際存在するファイルは対象にしないようにしておく。
  &lt;/p&gt;
  
  &lt;p&gt;
    3. アクセスがあった際に、プログラム言語で1の書き換え前のパスに生成したhtmlを作成する。
  &lt;/p&gt;
  
  &lt;p&gt;
    4. cronで3で作成したファイルを定期的に削除（今回は1日毎に実行するようにしておく。）
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    上記により一度作成したファイルがあればそれをプラウザで表示
  &lt;/p&gt;
  
  &lt;p&gt;
    なければcgi実行をするようになる。
  &lt;/p&gt;
  
  &lt;p&gt;
    プラウザで表示させることにより、プログラムを介在させなくてよくなり高速に表示されるようになる。
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;h4&gt;
    .htaccess
  &lt;/h4&gt;
  
  &lt;p&gt;
    index.htmlも生成対象としたいので
  &lt;/p&gt;
  
  &lt;p&gt;
    優先順位をindex.html index.cgiの順番とする。
  &lt;/p&gt;
  
  &lt;p&gt;
    これによりindex.htmlがない場合のみ、index.cgiを実行することになる。
  &lt;/p&gt;
  
  &lt;p&gt;
    これとプログラムでのindex.htmlの作成、手順4を組み合わせ実現する。
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    RewriteCond %{REQUEST_FILENAME} !-fで
  &lt;/p&gt;
  
  &lt;p&gt;
    存在するファイルは対象にしないようにする。
  &lt;/p&gt;
  
  &lt;pre&gt;
DirectoryIndex index.html index.cgi .ht
RewriteEngine on
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^&amp;#34;キャッシュフォルダ名&amp;#34;&amp;#92;/(&amp;#91;0-9A-Za-z]+).html$ index.cgi?a=g&amp;#38;s=$1 &amp;#91;L]
&lt;/pre&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;h4&gt;
    ruby
  &lt;/h4&gt;
  
  &lt;p&gt;
    以下のようなコードを作っておいて
  &lt;/p&gt;
  
  &lt;p&gt;
    ruby内でhtmlを生成し終わったら実行
  &lt;/p&gt;
  
  &lt;p&gt;
    あとで見たら、railsのcache_pageで同じようなことをやっているので
  &lt;/p&gt;
  
  &lt;p&gt;
    コード的にはそちらを参考にしたほうが良い。
  &lt;/p&gt;
  
  &lt;p&gt;
    見た記事:&lt;a href=&#34;http://gihyo.jp/dev/feature/01/rails2/0004?page=5&#34; target=&#34;_blank&#34;&gt;第4回　Railsアプリケーションをもっと速く&lt;/a&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    上記によると約60倍の性能となるようだ。
  &lt;/p&gt;
  
  &lt;pre class=&#34;syntax-highlight&#34;&gt;
&lt;span class=&#34;synPreProc&#34;&gt;def &lt;/span&gt;&lt;span class=&#34;synIdentifier&#34;&gt;cache_page&lt;/span&gt;(path, cash_content)
root = &lt;span class=&#34;synIdentifier&#34;&gt;File&lt;/span&gt;::dirname(&lt;span class=&#34;synConstant&#34;&gt;__FILE__&lt;/span&gt;)
path = root + path
&lt;span class=&#34;synStatement&#34;&gt;begin&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;File&lt;/span&gt;::open(path, &lt;span class=&#34;synSpecial&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;synConstant&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;synSpecial&#34;&gt;&amp;#34;&lt;/span&gt;) &lt;span class=&#34;synStatement&#34;&gt;do&lt;/span&gt; |&lt;span class=&#34;synIdentifier&#34;&gt;cash_file&lt;/span&gt;|
cash_file.write(cash_content)
&lt;span class=&#34;synStatement&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;synStatement&#34;&gt;rescue&lt;/span&gt;
&lt;span class=&#34;synStatement&#34;&gt;raise&lt;/span&gt;
&lt;span class=&#34;synStatement&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;synPreProc&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;h4&gt;
    cron
  &lt;/h4&gt;
  
  &lt;p&gt;
    &amp;#8220;ユーザ名&amp;#8221;、&amp;#8221;キャッシュフォルダ名&amp;#8221;は環境ごとに変更すること
  &lt;/p&gt;
  
  &lt;p&gt;
    &amp;#8220;キャッシュフォルダ名&amp;#8221;は.htaccessと合わせること
  &lt;/p&gt;
  
  &lt;pre class=&#34;syntax-highlight&#34;&gt;
&lt;span class=&#34;synComment&#34;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&#34;synIdentifier&#34;&gt;PATH&lt;/span&gt;=/bin:/usr/bin:/sbin:/usr/sbin:/usr/&lt;span class=&#34;synStatement&#34;&gt;local&lt;/span&gt;/bin
&lt;span class=&#34;synStatement&#34;&gt;rm&lt;/span&gt; /home/&lt;span class=&#34;synStatement&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;synSpecial&#34;&gt;ユーザ名&lt;/span&gt;&lt;span class=&#34;synStatement&#34;&gt;&amp;#34;&lt;/span&gt;/www/&lt;span class=&#34;synStatement&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;synSpecial&#34;&gt;キャッシュフォルダ名&lt;/span&gt;&lt;span class=&#34;synStatement&#34;&gt;&amp;#34;&lt;/span&gt;/*
&lt;span class=&#34;synStatement&#34;&gt;rm&lt;/span&gt; /home/&lt;span class=&#34;synStatement&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;synSpecial&#34;&gt;ユーザ名&lt;/span&gt;&lt;span class=&#34;synStatement&#34;&gt;&amp;#34;&lt;/span&gt;/www/index.html
&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Ruby 2.0</title>
      <link>http://d.tflare.com/2006/06/13/000000/</link>
      <pubDate>Mon, 12 Jun 2006 15:00:00 +0000</pubDate>
      
      <guid>http://d.tflare.com/2006/06/13/000000/</guid>
      <description>&lt;div class=&#34;section&#34;&gt;
  &lt;p&gt;
    1.9.1（安定志向版）が2007年12月までにはリリースされる
  &lt;/p&gt;
  
  &lt;p&gt;
    Ruby 2.0でも今のプログラムが大体動くように。
  &lt;/p&gt;
  
  &lt;p&gt;
    &amp;nbsp;
  &lt;/p&gt;
  
  &lt;p&gt;
    YARV
  &lt;/p&gt;
  
  &lt;p&gt;
    rubyが早くなる。
  &lt;/p&gt;
  
  &lt;p&gt;
    YARVはネイティブスレッド対応。ユーザレベルスレッドは未対応。Dosでは動かない。
  &lt;/p&gt;
  
  &lt;p&gt;
    tDiary等で遅くなることがあり調査中
  &lt;/p&gt;
  
  &lt;p&gt;
    質問
  &lt;/p&gt;
  
  &lt;p&gt;
    Q なぜネイティブスレッド？
  &lt;/p&gt;
  
  &lt;p&gt;
    A 現在のYARVでは1スレッドしか動いていない。今後改善　←前半忘れた。
  &lt;/p&gt;
  
  &lt;p&gt;
    &amp;nbsp;
  &lt;/p&gt;
  
  &lt;p&gt;
    鬼車
  &lt;/p&gt;
  
  &lt;p&gt;
    \1とかではなくグループに名前をつけられる。
  &lt;/p&gt;
  
  &lt;p&gt;
    現在1.9に入っているバージョンは1.8よりちょっと遅い。
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>使いやすいライブラリAPIデザインメモ</title>
      <link>http://d.tflare.com/2006/06/12/235232/</link>
      <pubDate>Mon, 12 Jun 2006 14:52:32 +0000</pubDate>
      
      <guid>http://d.tflare.com/2006/06/12/235232/</guid>
      <description>&lt;div class=&#34;section&#34;&gt;
  &lt;p&gt;
    脳力を使わない方向にユーザを誘導する。
  &lt;/p&gt;
  
  &lt;p&gt;
    常識を生かす。
  &lt;/p&gt;
  
  &lt;p&gt;
    余計なものは省く。
  &lt;/p&gt;
  
  &lt;p&gt;
    まず長い名前にしてから、短い名前を採用することでそちらへ誘導する
  &lt;/p&gt;
  
  &lt;p&gt;
    Digest::SHA256,Digest::SHA384,Digest::SHA512が
  &lt;/p&gt;
  
  &lt;p&gt;
    require &amp;#8216;digest/sha2&amp;#8217;
  &lt;/p&gt;
  
  &lt;p&gt;
    としないと使えない
  &lt;/p&gt;
  
  &lt;p&gt;
    短くないと使われないので
  &lt;/p&gt;
  
  &lt;p&gt;
    require &amp;#8216;digest&amp;#8217;
  &lt;/p&gt;
  
  &lt;p&gt;
    とするだけでDigest::SHA256,Digest::SHA384,Digest::SHA512を使えるようにしよう。
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Rubyizeによる言語境界の越え方メモ</title>
      <link>http://d.tflare.com/2006/06/12/235231/</link>
      <pubDate>Mon, 12 Jun 2006 14:52:31 +0000</pubDate>
      
      <guid>http://d.tflare.com/2006/06/12/235231/</guid>
      <description>&lt;div class=&#34;section&#34;&gt;
  &lt;p&gt;
    &lt;a href=&#34;http://arton.no-ip.info/data/rubyconj2006/rubyKaigi2006.zip&#34; target=&#34;_blank&#34;&gt;講演資料&lt;/a&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    上記の中身はPowerPointとHTAとC++のソース
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>注意</title>
      <link>http://d.tflare.com/2006/06/12/225201/</link>
      <pubDate>Mon, 12 Jun 2006 13:52:01 +0000</pubDate>
      
      <guid>http://d.tflare.com/2006/06/12/225201/</guid>
      <description>&lt;div class=&#34;section&#34;&gt;
  &lt;p&gt;
    下記では日本Rubyカンファレンス2006 1日目について書いています。
  &lt;/p&gt;
  
  &lt;p&gt;
    いろいろ間違ったり省略されていたりするかもしれません。
  &lt;/p&gt;
  
  &lt;p&gt;
    大体このようなことを言っていたなあということを記憶のみで書いています。
  &lt;/p&gt;
  
  &lt;p&gt;
    思い出したら追記します。
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>まつもとさんの基調講演のメモ</title>
      <link>http://d.tflare.com/2006/06/12/223229/</link>
      <pubDate>Mon, 12 Jun 2006 13:32:29 +0000</pubDate>
      
      <guid>http://d.tflare.com/2006/06/12/223229/</guid>
      <description>&lt;div class=&#34;section&#34;&gt;
  &lt;p&gt;
    State of the dominion
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    Larry Wallのする発表にState of the Onionというのがあって
  &lt;/p&gt;
  
  &lt;p&gt;
    Perlに関係ないことも話すけどすごく面白い。
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    これを真似したい。
  &lt;/p&gt;
  
  &lt;p&gt;
    nionで終わるもので、使えそうな言葉はdominion
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    dominionの意味は支配、統治、統制
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    State of the dominion
  &lt;/p&gt;
  
  &lt;p&gt;
    Rubyによる世界支配
  &lt;/p&gt;
  
  &lt;pre&gt;
前半はこのような事を言っていたような。
&lt;/pre&gt;
  
  &lt;p&gt;
    Rubyは「ふつう」のプログラマのための言語
  &lt;/p&gt;
  
  &lt;pre&gt;
質問がいっぱいあったけどあまり覚えてない。
&lt;/pre&gt;
  
  &lt;p&gt;
    Q 現在RubyはRubyライセンスとGPLの
  &lt;/p&gt;
  
  &lt;p&gt;
    A 問題ない。RPGツクールとかSketchUpがある。
  &lt;/p&gt;
  
  &lt;pre&gt;
下記とかが参考になりそう。
&lt;a href=&#34;http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-list/41883&#34; target=&#34;_blank&#34;&gt;ruby-list:41883&lt;/a&gt;、&lt;a href=&#34;http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-list/39435&#34; target=&#34;_blank&#34;&gt;ruby-list:39435&lt;/a&gt;
COPYING.jaの
3. 以下の条件のいずれかを満たす時に本プログラムをコンパイ
ルしたオブジェクトコードや実行形式でも配布できます。
(d) その他の配布条件を作者と合意する。
&lt;/pre&gt;
  
  &lt;p&gt;
    Q コミットのせいでRubyがコンパイルできない。
  &lt;/p&gt;
  
  &lt;p&gt;
    A 自分のところでは動いた。
  &lt;/p&gt;
  
  &lt;p&gt;
    Q minirubyまでしか動かない。
  &lt;/p&gt;
  
  &lt;p&gt;
    A minirubyまでしか確認してなかったかもしれない。
  &lt;/p&gt;
  
  &lt;p&gt;
    Q コミットは少しずつやるようにしてください。
  &lt;/p&gt;
  
  &lt;p&gt;
    A 出来るだけするようにします。
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    Q コミットされたものでCOPYINGが追加されていたようだが
  &lt;/p&gt;
  
  &lt;p&gt;
    A GPL3がどうなるかわからないのでGPL2のみにした。
  &lt;/p&gt;
  
  &lt;p&gt;
    GPL3が問題ないことが確認できたら条件をはずす。
  &lt;/p&gt;
  
  &lt;pre&gt;
今確認したら下記のようになっていました。
You can redistribute it and/or modify it under either the terms of the GPL
version 2 (see the file GPL), or the conditions below:
&lt;/pre&gt;
  
  &lt;p&gt;
    Q Rubyのキャッチフレーズは？
  &lt;/p&gt;
  
  &lt;p&gt;
    A Enjoy Programming
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    Q 最近驚き最小の原則を使っていないがなぜでしょうか。
  &lt;/p&gt;
  
  &lt;p&gt;
    A 使い始めたころは良いと思っていたが、いろいろなところで使われ、
  &lt;/p&gt;
  
  &lt;p&gt;
    　誤解されるようになってきたから。
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    Q Rubyにどんな機能が欲しいですか？
  &lt;/p&gt;
  
  &lt;p&gt;
    A 参照透明性となにかが欲しいといっていたような←忘れてしまいました。
  &lt;/p&gt;
  
  &lt;p&gt;
    Q モナドなしで参照透明性は有りえるのか？
  &lt;/p&gt;
  
  &lt;p&gt;
    A そんな変なことは有りえない。
  &lt;/p&gt;
  
  &lt;p&gt;
    　将来は関数型言語の要素を取り入れた普通のプログラマ向けの言語が出来るかもしれない。
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    Rubyを仕事に使っている人、手を挙げて
  &lt;/p&gt;
  
  &lt;p&gt;
    という質問で3分の2ぐらい手を上げた。
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Rubyの歴史のメモ</title>
      <link>http://d.tflare.com/2006/06/12/223228/</link>
      <pubDate>Mon, 12 Jun 2006 13:32:28 +0000</pubDate>
      
      <guid>http://d.tflare.com/2006/06/12/223228/</guid>
      <description>&lt;div class=&#34;section&#34;&gt;
  &lt;p&gt;
    Rubyという名前が決まった瞬間
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;a href=&#34;http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-dev/5173&#34; target=&#34;_blank&#34;&gt;ruby-dev:5173&lt;/a&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;a href=&#34;http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-list/1&#34; target=&#34;_blank&#34;&gt;ruby-list:1&lt;/a&gt;からtest失敗
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;a href=&#34;http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-list/2&#34; target=&#34;_blank&#34;&gt;ruby-list:2&lt;/a&gt;でパッチ
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;a href=&#34;http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-list/3&#34; target=&#34;_blank&#34;&gt;ruby-list:3&lt;/a&gt;でパッチ
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;a href=&#34;http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-list/4&#34; target=&#34;_blank&#34;&gt;ruby-list:4&lt;/a&gt;でパッチ
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    rubyがINTERNET Watchで&lt;a href=&#34;http://www.watch.impress.co.jp/internet/www/article/970922/ruby.htm&#34; target=&#34;_blank&#34;&gt;紹介&lt;/a&gt;された。
  &lt;/p&gt;
  
  &lt;p&gt;
  &lt;/p&gt;
  
  &lt;pre&gt;
昔はrubyと書くのが正式だったが
ちょーわかりやすい！Perl&amp;ruby入門という記事で
Perlが大文字なのにrubyが小文字なのでそろってないという理由で
RubyもOKになったというのをメーリングリストで見た記憶がある。
このような話をしてたように思うけど
詳細は忘れた。
RubyもOKというのが表明されたのが&lt;a href=&#34;http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-list/5039&#34; target=&#34;_blank&#34;&gt;ruby-list:5039&lt;/a&gt;
&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Railsによるメタプログラミング入門メモ</title>
      <link>http://d.tflare.com/2006/06/12/000000/</link>
      <pubDate>Sun, 11 Jun 2006 15:00:00 +0000</pubDate>
      
      <guid>http://d.tflare.com/2006/06/12/000000/</guid>
      <description>&lt;div class=&#34;section&#34;&gt;
  &lt;p&gt;
    Rubyにはevalがいっぱいある。
  &lt;/p&gt;
  
  &lt;p&gt;
    eval,Module#module_eval, Object#instance_eval, Module#class_eval
  &lt;/p&gt;
  
  &lt;p&gt;
    &amp;nbsp;
  &lt;/p&gt;
  
  &lt;p&gt;
    呼び出し元の環境を参照することをRailsがやっている
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Ruby プログラミング &#43; モデリングでより楽しくなろう – その1覚え書き</title>
      <link>http://d.tflare.com/2006/06/12/000000/</link>
      <pubDate>Sun, 11 Jun 2006 15:00:00 +0000</pubDate>
      
      <guid>http://d.tflare.com/2006/06/12/000000/</guid>
      <description>&lt;div class=&#34;section&#34;&gt;
  &lt;p&gt;
    UML知っている人、手あげてといって大体の人が手を上げる。
  &lt;/p&gt;
  
  &lt;p&gt;
    モデルではクラスの関係がわかりやすい。
  &lt;/p&gt;
  
  &lt;p&gt;
    Rubyではデザインパターンがライブラリで書ける。
  &lt;/p&gt;
  
  &lt;p&gt;
    UMLはもてる。
  &lt;/p&gt;
  
  &lt;p&gt;
    UMLの研修は女性が半分いる。
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Rails</title>
      <link>http://d.tflare.com/2006/06/01/000000/</link>
      <pubDate>Wed, 31 May 2006 15:00:00 +0000</pubDate>
      
      <guid>http://d.tflare.com/2006/06/01/000000/</guid>
      <description>&lt;div class=&#34;section&#34;&gt;
  &lt;p&gt;
     Railsあんまり興味なかったんだけど&lt;br /&gt; この本読んだら結構興味が出てきた。&lt;br /&gt; この本は最初の実際にアプリケーションを作成している部分のドライブ感がいい。
  &lt;/p&gt;
  
  &lt;p&gt;
    Railsは個人的にAction Controllerのルーティングあたりが気になった。&lt;br /&gt; これを応用すればmod_rewriteの代わりに使えないのかなと考えた。&lt;br /&gt; Railsの実装を調べてみると面白いかも。&lt;br /&gt; （mod_rewriteは無料のレンタルサーバだと使えないことがあったりするので）
  &lt;/p&gt;
  
  &lt;p&gt;
    追記mod_rewriteの代わりに使えるわけねー
  &lt;/p&gt;
  
  &lt;p&gt;
    というかmod_rewriteがないと下記のようなアドレスでcgiが見つからなくてNot Foundで終わりじゃん&lt;br /&gt; http://www.hoge.net/diary/2006/06/02/
  &lt;/p&gt;
  
  &lt;p&gt;
    なにを考えてるんだろう。
  &lt;/p&gt;
  
  &lt;p&gt;
    Action Controllerのマッピングをちょっと調べてみたら&lt;br /&gt; 基本的にREQUEST_URIを元にマッピングしてる&lt;br /&gt; いろいろと省略可能だったり&lt;br /&gt; オプションがいろいろついていたりしているので複雑になっている
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;a class=&#34;asin&#34; href=&#34;http://d.hatena.ne.jp/asin/4274066401&#34;&gt;&lt;img class=&#34;asin&#34; title=&#34;RailsによるアジャイルWebアプリケーション開発&#34; src=&#34;http://ecx.images-amazon.com/images/I/51481HMGD1L._SL160_.jpg&#34; alt=&#34;RailsによるアジャイルWebアプリケーション開発&#34; /&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
